import { createSlice } from "@reduxjs/toolkit";

// Create a slice for managing transaction state
const transactionSlice = createSlice({
  // Slice name
  name: "transactions",

  // Initial state for the list of transactions
  initialState: {
    transactionList: [], // Array of all transaction objects
  },

  // Reducers to modify the transaction list
  reducers: {
    /**
     * Adds a new transaction entry to the list.
     * @param {Object} state - Current state
     * @param {Object} action - Action containing the transaction object
     */
    addTransactionEntry: (state, action) => {
      const userObj = {
        ...action.payload,
      };
      state.transactionList.push(userObj);
    },

    /**
     * Removes a specific transaction by its ID.
     * @param {Object} state - Current state
     * @param {Object} action - Action containing the transaction ID
     */
    removeTransactionEntry: (state, action) => {
      state.transactionList = state.transactionList.filter(
        (transaction) => transaction.id !== action.payload
      );
      return state;
    },

    /**
     * Clears all transactions from the list.
     * @param {Object} state - Current state
     */
    removeAllTransactions: (state) => {
      state.transactionList.length = 0;
    },
  },
});

// Export action creators generated by createSlice
export const {
  addTransactionEntry,
  removeTransactionEntry,
  removeAllTransactions,
} = transactionSlice.actions;

// Export the reducer to be included in the Redux store
export default transactionSlice.reducer;
