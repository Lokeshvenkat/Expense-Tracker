import { createSlice } from "@reduxjs/toolkit";

// Create a slice for managing expense state
const expenseSlice = createSlice({
  // Slice name
  name: "expense",

  // Initial state for expenses
  initialState: {
    totalExpense: 0, // Total combined expense
    categoricalExpense: {
      food: 0,
      travel: 0,
      entertainment: 0,
      others: 0,
    },
  },

  // Reducers to modify the state
  reducers: {
    /**
     * Updates the total expense based on an operation (add/subtract).
     * @param {Object} state - Current state
     * @param {Object} action - Action with { amount, operation }
     */
    updateTotalExpense: (state, action) => {
      const { amount, operation } = action.payload;

      if (operation === "add") {
        state.totalExpense += amount;
      } else {
        state.totalExpense -= amount;
      }
    },

    /**
     * Updates the expense for a specific category.
     * @param {Object} state - Current state
     * @param {Object} action - Action with { amount, category, operation }
     */
    updateCategoricalExpense: (state, action) => {
      const { amount, category, operation } = action.payload;
      let currentCategoryAmount = state.categoricalExpense[category];

      if (operation === "add") {
        currentCategoryAmount += amount;
      } else {
        currentCategoryAmount -= amount;
      }

      // Return updated categorical expense state
      state.categoricalExpense = {
        ...state.categoricalExpense,
        [category]: currentCategoryAmount,
      };

      return state;
    },

    /**
     * Resets both total and categorical expenses to zero.
     * @param {Object} state - Current state
     */
    resetAllExpense: (state) => {
      state.totalExpense = 0;
      state.categoricalExpense = {
        food: 0,
        travel: 0,
        entertainment: 0,
        others: 0,
      };

      return state;
    },
  },
});

// Export action creators generated by createSlice
export const { updateTotalExpense, updateCategoricalExpense, resetAllExpense } =
  expenseSlice.actions;

// Export reducer to be used in the store
export default expenseSlice.reducer;
